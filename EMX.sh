#!/bin/bash

# Check if the correct number of arguments is provided
if [ "$#" -ne 2 ]; then
    echo "Usage: $0 <url_with_parameters> <codes_file>"
    exit 1
fi

url_with_parameters="$1"
codes_file="$2"

# Function to check if source code reflects parameter changes
check_reflection() {
    local url="$1"
    local code="$2"

    # Construct the full URL with the provided code
    full_url="${url}${code}"

    # Use curl to get the source code of the URL
    source_code=$(curl -s "$full_url")

    # Check if the code is reflected in the source code
    if [[ "$source_code" == *"$code"* ]]; then
        echo -e "\e[32mCode reflected in the source: $code\e[0m"
        echo "$code" >> positive_results.txt
    else
        echo -e "\e[31mCode not reflected in the source: $code\e[0m"
    fi
}

# Remove the old positive results file if it exists
rm -f positive_results.txt

# Read each line of the codes file and test against the URL
while IFS= read -r code; do
    check_reflection "$url_with_parameters" "$code"
done < "$codes_file"

if [ -e positive_results.txt ]; then
    echo "Positive results saved in positive_results.txt"
else
    echo "No Positive results found ): try again..."
fi
